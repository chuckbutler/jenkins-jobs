<?xml version='1.0' encoding='UTF-8'?>
<project>
  <actions/>
  <description>Build all architectures supported by Kubernetes in Jenkins.</description>
  <keepDependencies>false</keepDependencies>
  <properties>
    <hudson.model.ParametersDefinitionProperty>
      <parameterDefinitions>
        <hudson.model.StringParameterDefinition>
          <name>VERSION</name>
          <description>The version of Kubernetes to checkout and build.</description>
          <defaultValue>v1.4.0</defaultValue>
        </hudson.model.StringParameterDefinition>
      </parameterDefinitions>
    </hudson.model.ParametersDefinitionProperty>
  </properties>
  <scm class="hudson.plugins.git.GitSCM" plugin="git@3.0.0">
    <configVersion>2</configVersion>
    <userRemoteConfigs>
      <hudson.plugins.git.UserRemoteConfig>
        <url>https://github.com/kubernetes/kubernetes.git</url>
      </hudson.plugins.git.UserRemoteConfig>
    </userRemoteConfigs>
    <branches>
      <hudson.plugins.git.BranchSpec>
        <name>*/master</name>
      </hudson.plugins.git.BranchSpec>
    </branches>
    <doGenerateSubmoduleConfigurations>false</doGenerateSubmoduleConfigurations>
    <submoduleCfg class="list"/>
    <extensions/>
  </scm>
  <canRoam>true</canRoam>
  <disabled>false</disabled>
  <blockBuildWhenDownstreamBuilding>false</blockBuildWhenDownstreamBuilding>
  <blockBuildWhenUpstreamBuilding>false</blockBuildWhenUpstreamBuilding>
  <triggers/>
  <concurrentBuild>false</concurrentBuild>
  <builders>
    <hudson.tasks.Shell>
      <command>git checkout -f ${VERSION}
</command>
    </hudson.tasks.Shell>
    <hudson.tasks.Shell>
      <command>echo Starting build `date`

# Build cross takes an hour to build all possible architectures.
build/run.sh make cross \
  WHAT=&apos;cmd/kube-apiserver \
    cmd/kube-controller-manager \
    cmd/kube-dns \
    cmd/kube-proxy \
    cmd/kubectl \
    cmd/kubelet \
    plugin/cmd/kube-scheduler&apos;

echo Build finished `date`</command>
    </hudson.tasks.Shell>
    <hudson.tasks.Shell>
      <command>ARCHITECTURES=&quot;amd64 arm64 ppc64le s390x&quot;
echo &quot;Creating resources for ${ARCHITECTURES}&quot;

# Loop through the array of architectures to build resources.
for ARCH in ${ARCHITECTURES}; do
  ARCH_DIR=$WORKSPACE/_output/dockerized/bin/linux/$ARCH
  # Can not build the resource if the architecture directory does not exist.
  if [ -d $ARCH_DIR ]; then
    cd $ARCH_DIR
    # Create the kubernetes-master resource.
    echo &quot;Creating the ${WORKSPACE}/kubernetes-master-${VERSION}-${ARCH}.tar.gz file.&quot;
    MASTER_BINS=&quot;kube-apiserver kube-controller-manager kubectl kube-dns kube-scheduler&quot;
    tar -cvzf $WORKSPACE/kubernetes-master-$VERSION-$ARCH.tar.gz $MASTER_BINS
    # Create the kubernetes-worker resource.
    echo &quot;Creating the ${WORKSPACE}/kubernetes-worker-${VERSION}-${ARCH}.tar.gz file.&quot;
    WORKER_BINS=&quot;kubectl kubelet kube-proxy&quot;
    tar -cvzf $WORKSPACE/kubernetes-worker-$VERSION-$ARCH.tar.gz $WORKER_BINS
    
    cd $WORKSPACE
  else
    echo &quot;Missing architecture: ${ARCH}&quot;
  fi
done
echo Resources built `date`</command>
    </hudson.tasks.Shell>
  </builders>
  <publishers>
    <hudson.tasks.ArtifactArchiver>
      <artifacts>_output/,kubernetes-master-*,kubernetes-worker-*</artifacts>
      <allowEmptyArchive>false</allowEmptyArchive>
      <onlyIfSuccessful>true</onlyIfSuccessful>
      <fingerprint>true</fingerprint>
      <defaultExcludes>true</defaultExcludes>
      <caseSensitive>true</caseSensitive>
    </hudson.tasks.ArtifactArchiver>
  </publishers>
  <buildWrappers/>
</project>